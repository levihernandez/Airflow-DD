apm_config:
  apm_non_local_traffic: true

# Use java container support
jmx_use_container_support: true

logs_enabled: true
listeners:
    - name: docker
config_providers:
    - name: docker
      polling: true
logs_config:
    container_collect_all: true
    open_files_limit: 100

tags:
  - integration: "airflow"
# dogstatsd_mapper_cache_size: 1000  # default to 1000
dogstatsd_mapper_profiles:  
  - name: airflow
    prefix: "airflow."
    mappings:
      - match: "airflow.*_start"
        name: "airflow.job.start"
        tags:
          job_name: "$1"
          block: dogstatsd
      - match: "airflow.*_end"
        name: "airflow.job.end"
        tags:
          job_name: "$1"
      - match: "airflow.*_heartbeat_failure"
        name: airflow.job.heartbeat.failure
        tags:
          job_name: "$1"
      - match: "airflow.operator_failures_*"
        name: "airflow.operator_failures"
        tags:
          operator_name: "$1"
      - match: "airflow.operator_successes_*"
        name: "airflow.operator_successes"
        tags:
          operator_name: "$1"
      - match: 'airflow\.dag_processing\.last_runtime\.(.*)'
        match_type: "regex"
        name: "airflow.dag_processing.last_runtime"
        tags:
          dag_file: "$1"
      - match: 'airflow\.dag_processing\.last_run\.seconds_ago\.(.*)'
        match_type: "regex"
        name: "airflow.dag_processing.last_run.seconds_ago"
        tags:
          dag_file: "$1"
      - match: 'airflow\.dag\.loading-duration\.(.*)'
        match_type: "regex"
        name: "airflow.dag.loading_duration"
        tags:
          dag_file: "$1"
      - match: "airflow.dagrun.*.first_task_scheduling_delay"
        name: "airflow.dagrun.first_task_scheduling_delay"
        tags:
          dag_id: "$1"
      - match: "airflow.pool.open_slots.*"
        name: "airflow.pool.open_slots"
        tags:
          pool_name: "$1"
      - match: "pool.queued_slots.*"
        name: "airflow.pool.queued_slots"
        tags:
          pool_name: "$1"
      - match: "pool.running_slots.*"
        name: "airflow.pool.running_slots"
        tags:
          pool_name: "$1"
      - match: "airflow.pool.used_slots.*"
        name: "airflow.pool.used_slots"
        tags:
          pool_name: "$1"
      - match: "airflow.pool.starving_tasks.*"
        name: "airflow.pool.starving_tasks"
        tags:
          pool_name: "$1"
      - match: 'airflow\.dagrun\.dependency-check\.(.*)'
        match_type: "regex"
        name: "airflow.dagrun.dependency_check"
        tags:
          dag_id: "$1"
      - match: 'airflow\.dag\.(.*)\.([^.]*)\.duration'
        match_type: "regex"
        name: "airflow.dag.task.duration"
        tags:
          dag_id: "$1"
          task_id: "$2"
      - match: 'airflow\.dag_processing\.last_duration\.(.*)'
        match_type: "regex"
        name: "airflow.dag_processing.last_duration"
        tags:
          dag_file: "$1"
      - match: 'airflow\.dagrun\.duration\.success\.(.*)'
        match_type: "regex"
        name: "airflow.dagrun.duration.success"
        tags:
          dag_id: "$1"
      - match: 'airflow\.dagrun\.duration\.failed\.(.*)'
        match_type: "regex"
        name: "airflow.dagrun.duration.failed"
        tags:
          dag_id: "$1"
      - match: 'airflow\.dagrun\.schedule_delay\.(.*)'
        match_type: "regex"
        name: "airflow.dagrun.schedule_delay"
        tags:
          dag_id: "$1"
      - match: 'scheduler.tasks.running'
        name: "airflow.scheduler.tasks.running"
      - match: 'scheduler.tasks.starving'
        name: "airflow.scheduler.tasks.starving"
      - match: sla_email_notification_failure
        name: 'airflow.sla_email_notification_failure'
      - match: 'airflow\.task_removed_from_dag\.(.*)'
        match_type: "regex"
        name: "airflow.dag.task_removed"
        tags:
          dag_id: "$1"
      - match: 'airflow\.task_restored_to_dag\.(.*)'
        match_type: "regex"
        name: "airflow.dag.task_restored"
        tags:
          dag_id: "$1"
      - match: "airflow.task_instance_created-*"
        name: "airflow.task.instance_created"
        tags:
          task_class: "$1"
      #- match: "ti.start.*.*"
      #  name: "airflow.ti.start"
      #  tags:
      #    dagid: "$1"
      #    taskid: "$2"
      #- match: "ti.finish.*.*.*"
      #  name: "airflow.ti.finish"
      #  tags:
      #    dagid: "$1"
      #    taskid: "$2"
      #    state: "$3"
      - match: "airflow.ti.*.*.*"
        name: "airflow.ti.status"
        tags:
          state: "$1"
          dag_id: "$2"
          task_id: "$3"
          
